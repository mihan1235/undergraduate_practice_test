//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\mihan\source\repos\Course\\Grammar\function.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


	using System.Collections;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="functionParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IfunctionListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunction([NotNull] functionParser.FunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.function"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunction([NotNull] functionParser.FunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] functionParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] functionParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSkip([NotNull] functionParser.SkipContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.skip"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSkip([NotNull] functionParser.SkipContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.mul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMul([NotNull] functionParser.MulContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.mul"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMul([NotNull] functionParser.MulContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.div"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiv([NotNull] functionParser.DivContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.div"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiv([NotNull] functionParser.DivContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPow([NotNull] functionParser.PowContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.pow"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPow([NotNull] functionParser.PowContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd([NotNull] functionParser.AddContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.add"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd([NotNull] functionParser.AddContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub([NotNull] functionParser.SubContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub([NotNull] functionParser.SubContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValue([NotNull] functionParser.ValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValue([NotNull] functionParser.ValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.math_func"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMath_func([NotNull] functionParser.Math_funcContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.math_func"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMath_func([NotNull] functionParser.Math_funcContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCos([NotNull] functionParser.CosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCos([NotNull] functionParser.CosContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSin([NotNull] functionParser.SinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSin([NotNull] functionParser.SinContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.tan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTan([NotNull] functionParser.TanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.tan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTan([NotNull] functionParser.TanContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCot([NotNull] functionParser.CotContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCot([NotNull] functionParser.CotContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExponent([NotNull] functionParser.ExponentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.exponent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExponent([NotNull] functionParser.ExponentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sqrt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqrt([NotNull] functionParser.SqrtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sqrt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqrt([NotNull] functionParser.SqrtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.abs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAbs([NotNull] functionParser.AbsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.abs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAbs([NotNull] functionParser.AbsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.acos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAcos([NotNull] functionParser.AcosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.acos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAcos([NotNull] functionParser.AcosContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.asin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsin([NotNull] functionParser.AsinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.asin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsin([NotNull] functionParser.AsinContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.atan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtan([NotNull] functionParser.AtanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.atan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtan([NotNull] functionParser.AtanContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cosh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCosh([NotNull] functionParser.CoshContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cosh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCosh([NotNull] functionParser.CoshContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sinh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSinh([NotNull] functionParser.SinhContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sinh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSinh([NotNull] functionParser.SinhContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.tanh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTanh([NotNull] functionParser.TanhContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.tanh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTanh([NotNull] functionParser.TanhContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.ln"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLn([NotNull] functionParser.LnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.ln"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLn([NotNull] functionParser.LnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.log"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLog([NotNull] functionParser.LogContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.log"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLog([NotNull] functionParser.LogContext context);
}
