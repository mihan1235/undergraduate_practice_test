//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\mihan\source\repos\Course\\Grammar\function.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


	using System.Collections;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IfunctionListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class functionBaseListener : IfunctionListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] functionParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.function"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] functionParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] functionParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] functionParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.skip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSkip([NotNull] functionParser.SkipContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.skip"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSkip([NotNull] functionParser.SkipContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMul([NotNull] functionParser.MulContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.mul"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMul([NotNull] functionParser.MulContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.div"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDiv([NotNull] functionParser.DivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.div"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDiv([NotNull] functionParser.DivContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.pow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPow([NotNull] functionParser.PowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.pow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPow([NotNull] functionParser.PowContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd([NotNull] functionParser.AddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd([NotNull] functionParser.AddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSub([NotNull] functionParser.SubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSub([NotNull] functionParser.SubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] functionParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] functionParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.math_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMath_func([NotNull] functionParser.Math_funcContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.math_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMath_func([NotNull] functionParser.Math_funcContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCos([NotNull] functionParser.CosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCos([NotNull] functionParser.CosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSin([NotNull] functionParser.SinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSin([NotNull] functionParser.SinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.tan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTan([NotNull] functionParser.TanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.tan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTan([NotNull] functionParser.TanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCot([NotNull] functionParser.CotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCot([NotNull] functionParser.CotContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.exponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExponent([NotNull] functionParser.ExponentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.exponent"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExponent([NotNull] functionParser.ExponentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSqrt([NotNull] functionParser.SqrtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sqrt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSqrt([NotNull] functionParser.SqrtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.abs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbs([NotNull] functionParser.AbsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.abs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbs([NotNull] functionParser.AbsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.acos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAcos([NotNull] functionParser.AcosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.acos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAcos([NotNull] functionParser.AcosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.asin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsin([NotNull] functionParser.AsinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.asin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsin([NotNull] functionParser.AsinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.atan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtan([NotNull] functionParser.AtanContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.atan"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtan([NotNull] functionParser.AtanContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.cosh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCosh([NotNull] functionParser.CoshContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.cosh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCosh([NotNull] functionParser.CoshContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.sinh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSinh([NotNull] functionParser.SinhContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.sinh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSinh([NotNull] functionParser.SinhContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.tanh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTanh([NotNull] functionParser.TanhContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.tanh"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTanh([NotNull] functionParser.TanhContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.ln"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLn([NotNull] functionParser.LnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.ln"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLn([NotNull] functionParser.LnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="functionParser.log"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLog([NotNull] functionParser.LogContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="functionParser.log"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLog([NotNull] functionParser.LogContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
